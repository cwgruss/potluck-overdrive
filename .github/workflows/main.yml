# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: "Build & Test"
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Start
        run: echo "Starting CI Pipeline"

      - name: Cache
        uses: actions/cache@v2.1.6
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: "**/node_modules"
          # An explicit key for restoring and saving the cache
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      # Runs a set of commands using the runners shell
      - name: Setup Environment & Install Dependencies
        run: |
          echo "Setup Environment & Install Dependencies,"
          echo "Installing Node Dependencies."
          npm ci --prefix ./packages/ui

      - name: Run Unit Tests
        run: |
          echo "Running Unit Tests"
          npm run test:unit --prefix ./packages/ui

      - name: Run Build
        run: |
          echo "Running Build"
          npm run build --prefix ./packages/ui

  deploy:
    name: "Deploy to Heroku"
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      # Runs a single command using the runners shell
      - name: Start
        run: echo Starting $NODE_ENV

      - uses: actions/checkout@v2

      - name: Login to Heroku Container registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku container:login

      - name: Build and Push
        env:
          NODE_ENV: production
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          VUE_APP_FIREBASE_API_KEY: ${{ secrets.VUE_APP_FIREBASE_API_KEY }}
          VUE_APP_FIREBASE_APP_ID: ${{ secrets.VUE_APP_FIREBASE_APP_ID }}
          VUE_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.VUE_APP_FIREBASE_AUTH_DOMAIN }}
          VUE_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.VUE_APP_FIREBASE_MEASUREMENT_ID }}
          VUE_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VUE_APP_FIREBASE_MESSAGING_SENDER_ID }}
          VUE_APP_FIREBASE_PROJECT_ID: ${{ secrets.VUE_APP_FIREBASE_PROJECT_ID }}
          VUE_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.VUE_APP_FIREBASE_STORAGE_BUCKET }}
          VUE_APP_SLACK_CLIENT_ID: ${{ secrets.VUE_APP_SLACK_CLIENT_ID }}
        run: |
          heroku container:push web --app ${{secrets.HEROKU_APP_NAME}}

      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} we
